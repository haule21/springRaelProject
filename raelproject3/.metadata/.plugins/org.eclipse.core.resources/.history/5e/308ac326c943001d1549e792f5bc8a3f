<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.rael.mapper.StockMapper">
	
	<sql id="search">
        <!-- 검색 키워드가 있을 때 -->
        <if test='keyword != null and keyword != ""'>
            <choose>
                <!-- 검색 유형이 있을 때 -->
                <when test="searchType != null and searchType != ''">
                    <choose>
                        <when test="'productname'.equals( searchType )">
                            AND AA.PRODUCT_NAME LIKE '%'||#{arg0.keyword}||'%'
                        </when>
                        <when test="'company'.equals( searchType )">
                            AND BB.PRODUCT_COMPANY LIKE '%'||#{arg0.keyword}||'%'
                        </when>
                    </choose>
                </when>
                <!-- 전체 검색일 때 때 -->
                <otherwise>
                    AND (
                           AA.PRODUCT_NAME LIKE '%'||#{keyword}||'%'
                        OR BB.PRODUCT_COMPANY LIKE '%'||#{keyword}||'%'
                    )
                </otherwise>
            </choose>
        </if>
    </sql>
	
	<select id="StockCount" resultType="int">
	<![CDATA[
		SELECT COUNT(1) 
		FROM
		    RAEL_STOCK A,
		    (
		        SELECT
		            AA.PRODUCT_NUM,
		            AA.PRODUCT_NAME, 
		            BB.PRODUCT_BY_NUM,
		            BB.PRODUCT_COMPANY, 
		            BB.PRODUCT_COLOR, 
		            BB.PRODUCT_LENGTH
		        FROM
		            RAEL_PRODUCT AA,
		            RAEL_PRODUCT_DETAIL BB
		        WHERE
		            AA.PRODUCT_NUM = BB.PRODUCT_NUM
	]]>
		            <include refid="search" />
	<![CDATA[
		
		    ) C
		WHERE
		    A.STOCK_NUM = C.PRODUCT_NUM||LPAD(C.PRODUCT_BY_NUM,2,'0')
	]]>
	</select>
	<select id="StockCountCategory" resultType="int">
	<![CDATA[
		SELECT 
			COUNT(1) 
		FROM
		    RAEL_STOCK A,
		    (
		        SELECT
		            AA.PRODUCT_NUM,
		            AA.PRODUCT_NAME, 
		            BB.PRODUCT_BY_NUM,
		            BB.PRODUCT_COMPANY, 
		            BB.PRODUCT_COLOR, 
		            BB.PRODUCT_LENGTH
		        FROM
		            RAEL_PRODUCT AA,
		            RAEL_PRODUCT_DETAIL BB
		        WHERE
		            AA.PRODUCT_NUM = BB.PRODUCT_NUM AND
		            AA.PRODUCT_CATEGORY_NUM = #{arg0}
	]]>
		            <include refid="search" />
	<![CDATA[
		
		    ) C
		WHERE
		    A.STOCK_NUM = C.PRODUCT_NUM||LPAD(C.PRODUCT_BY_NUM,2,'0')
	]]>
	</select>

	<select id="SelectStock" resultType="com.example.rael.dto.StockSelectDTO">
	<![CDATA[
		SELECT 
		    A.STOCK_NUM AS STOCKNUM,
		    
		    C.PRODUCT_NAME|| ' (' || 
		    DECODE(C.PRODUCT_COLOR,NULL,C.PRODUCT_COMPANY, C.PRODUCT_COMPANY||', ') ||
		    DECODE(C.PRODUCT_LENGTH,NULL,NVL(C.PRODUCT_COLOR,''), C.PRODUCT_COLOR ||', ') ||
		    C.PRODUCT_LENGTH||')' AS PRODUCTNAME,
		    
		    A.STOCK_QUANTITY AS STOCKQUANTITY,
		    A.STOCK_QUANTITY_INBOUND AS STOCKQUANTITYINBOUND, 
		    A.STOCK_QUANTITY_OUTBOUND AS STOCKQUANTITYOUTBOUND, 
		    (
		    SELECT 
		        SUM(DECODE(STOCK_STATE, '입', STOCK_PRICE_SUM, 0)) OVER(PARTITION BY STOCK_NUM)
		    FROM
		        RAEL_STOCK_HISTORY
		    ) AS SUMPRICEINBOUND, 
		    (SELECT
		        SUM(DECODE(STOCK_STATE, '출', STOCK_PRICE_SUM, 0)) OVER(PARTITION BY STOCK_NUM)
		    FROM
		        RAEL_STOCK_HISTORY
		    ) AS SUMPRICEOUTBOUND
		FROM
		    RAEL_STOCK A,
		    (
		        SELECT
		            AA.PRODUCT_NUM,
		            AA.PRODUCT_NAME, 
		            BB.PRODUCT_BY_NUM,
		            BB.PRODUCT_COMPANY, 
		            BB.PRODUCT_COLOR, 
		            BB.PRODUCT_LENGTH
		        FROM
		            RAEL_PRODUCT AA,
		            RAEL_PRODUCT_DETAIL BB
		        WHERE
		            AA.PRODUCT_NUM = BB.PRODUCT_NUM
	]]>
		            <include refid="search" />
	<![CDATA[
		
		    ) C
		WHERE
		    A.STOCK_NUM = C.PRODUCT_NUM||LPAD(C.PRODUCT_BY_NUM,2,'0')
		OFFSET #{pagination.limitStart} ROWS FETCH NEXT #{recordSize} ROW ONLY
	]]>
	</select>
	
	
	<select id="SelectStockCategory" resultType="com.example.rael.dto.StockSelectDTO">
	<![CDATA[
		SELECT 
		    A.STOCK_NUM AS STOCKNUM,
		    
		    C.PRODUCT_NAME|| ' (' || 
		    DECODE(C.PRODUCT_COLOR,NULL,C.PRODUCT_COMPANY, C.PRODUCT_COMPANY||', ') ||
		    DECODE(C.PRODUCT_LENGTH,NULL,NVL(C.PRODUCT_COLOR,''), C.PRODUCT_COLOR ||', ') ||
		    C.PRODUCT_LENGTH||')' AS PRODUCTNAME,
		    
		    A.STOCK_QUANTITY AS STOCKQUANTITY,
		    A.STOCK_QUANTITY_INBOUND AS STOCKQUANTITYINBOUND, 
		    A.STOCK_QUANTITY_OUTBOUND AS STOCKQUANTITYOUTBOUND, 
		    (
		    SELECT 
		        SUM(DECODE(STOCK_STATE, '입', STOCK_PRICE_SUM, 0)) OVER(PARTITION BY STOCK_NUM)
		    FROM
		        RAEL_STOCK_HISTORY
		    ) AS SUMPRICEINBOUND, 
		    (SELECT
		        SUM(DECODE(STOCK_STATE, '출', STOCK_PRICE_SUM, 0)) OVER(PARTITION BY STOCK_NUM)
		    FROM
		        RAEL_STOCK_HISTORY
		    ) AS SUMPRICEOUTBOUND
		FROM
		    RAEL_STOCK A,
		    (
		        SELECT
		            AA.PRODUCT_NUM,
		            AA.PRODUCT_NAME, 
		            BB.PRODUCT_BY_NUM,
		            BB.PRODUCT_COMPANY, 
		            BB.PRODUCT_COLOR, 
		            BB.PRODUCT_LENGTH
		        FROM
		            RAEL_PRODUCT AA,
		            RAEL_PRODUCT_DETAIL BB
		        WHERE
		            AA.PRODUCT_NUM = BB.PRODUCT_NUM AND
		            AA.PRODUCT_CATEGORY_NUM = #{arg1}
	]]>
		            <include refid="search" />
	<![CDATA[
		
		    ) C
		WHERE
		    A.STOCK_NUM = C.PRODUCT_NUM||LPAD(C.PRODUCT_BY_NUM,2,'0')
		OFFSET #{pagination.limitStart} ROWS FETCH NEXT #{recordSize} ROW ONLY
	]]>
	</select>
</mapper>